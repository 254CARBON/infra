name: Terraform Plan

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  TERRAFORM_VERSION: "1.7.5"
  TF_IN_AUTOMATION: "true"

jobs:
  plan:
    name: Generate Terraform Plan (${{ matrix.stack.name }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        stack:
          - name: local
            path: terraform/stacks/local
          - name: hybrid
            path: terraform/stacks/hybrid

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare Kubernetes configuration
        run: |
          mkdir -p "$HOME/.kube"
          cat <<'EOF' > "$HOME/.kube/config"
          apiVersion: v1
          kind: Config
          clusters:
          - name: stub
            cluster:
              server: https://example.invalid
              insecure-skip-tls-verify: true
          contexts:
          - name: stub
            context:
              cluster: stub
              user: stub
          current-context: stub
          users:
          - name: stub
            user:
              token: dummytoken
          EOF

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform -chdir=${{ matrix.stack.path }} init -input=false

      - name: Validate configuration
        run: terraform -chdir=${{ matrix.stack.path }} validate

      - name: Generate plan
        run: terraform -chdir=${{ matrix.stack.path }} plan -input=false -lock=false -no-color -out=tfplan

      - name: Capture plan output
        run: terraform -chdir=${{ matrix.stack.path }} show -no-color tfplan > ${{ matrix.stack.path }}/plan.txt

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ matrix.stack.name }}
          path: ${{ matrix.stack.path }}/plan.txt
