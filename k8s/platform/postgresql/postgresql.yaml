apiVersion: v1
kind: Secret
metadata:
  name: postgres-credentials
  namespace: data-plane
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: "254carbon"
type: Opaque
data:
  password: cG9zdGdyZXMxMjM= # postgres123
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-storage
  namespace: data-plane
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: "254carbon"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard-local
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: data-plane
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: "254carbon"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql
        app.kubernetes.io/part-of: "254carbon"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 80
            preference:
              matchExpressions:
              - key: role
                operator: In
                values:
                - core
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 60
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: postgresql
              topologyKey: kubernetes.io/hostname
      containers:
      - name: postgresql
        image: postgres:15
        imagePullPolicy: IfNotPresent
        ports:
        - name: postgres
          containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "254carbon"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 750m
            memory: 1.5Gi
          limits:
            cpu: 1500m
            memory: 3Gi
        startupProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - 254carbon
          failureThreshold: 18
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - 254carbon
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
            - -d
            - 254carbon
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      - name: postgres-exporter
        image: quay.io/prometheuscommunity/postgres-exporter:v0.14.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: metrics
          containerPort: 9187
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534
        env:
        - name: DATA_SOURCE_URI
          value: "postgresql://localhost:5432/254carbon?sslmode=disable"
        - name: DATA_SOURCE_USER
          value: "postgres"
        - name: DATA_SOURCE_PASS
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 300m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 20
          periodSeconds: 20
          timeoutSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-storage
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: data-plane
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/part-of: "254carbon"
spec:
  selector:
    app.kubernetes.io/name: postgresql
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  - name: metrics
    port: 9187
    targetPort: 9187
  type: ClusterIP
