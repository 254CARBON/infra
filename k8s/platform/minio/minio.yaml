apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
type: Opaque
data:
  access-key: bWluaW9hZG1pbg== # minioadmin
  secret-key: bWluaW9hZG1pbjEyMw== # minioadmin123
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-storage
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard-local
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/part-of: "254carbon"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: minio
        image: minio/minio:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: api
          containerPort: 9000
        - name: console
          containerPort: 9001
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access-key
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret-key
        volumeMounts:
        - name: minio-storage
          mountPath: /data
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-storage
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
spec:
  selector:
    app.kubernetes.io/name: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001
  type: ClusterIP
