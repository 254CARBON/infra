apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
type: Opaque
data:
  access-key: bWluaW9hZG1pbg== # minioadmin
  secret-key: bWluaW9hZG1pbjEyMw== # minioadmin123
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-storage
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard-local
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/part-of: "254carbon"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            preference:
              matchExpressions:
              - key: role
                operator: In
                values:
                - core
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 40
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: minio
              topologyKey: kubernetes.io/hostname
      containers:
      - name: minio
        image: minio/minio:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        ports:
        - name: api
          containerPort: 9000
        - name: console
          containerPort: 9001
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: access-key
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-credentials
              key: secret-key
        - name: MINIO_PROMETHEUS_AUTH_TYPE
          value: "public"
        volumeMounts:
        - name: minio-storage
          mountPath: /data
        resources:
          requests:
            cpu: 600m
            memory: 768Mi
          limits:
            cpu: 1500m
            memory: 2Gi
        startupProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          failureThreshold: 30
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-storage
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: storage
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/part-of: "254carbon"
spec:
  selector:
    app.kubernetes.io/name: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001
  type: ClusterIP
