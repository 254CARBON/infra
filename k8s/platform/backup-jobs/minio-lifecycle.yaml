apiVersion: batch/v1
kind: CronJob
metadata:
  name: minio-backup-maintenance
  namespace: backup
  labels:
    app.kubernetes.io/name: minio-backup-maintenance
    app.kubernetes.io/part-of: "254carbon"
spec:
  schedule: "30 1 * * *"
  suspend: false
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 3
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/name: minio-backup-maintenance
            app.kubernetes.io/part-of: "254carbon"
        spec:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            fsGroup: 1001
          containers:
          - name: minio-client
            image: bitnami/minio-client:2024.3.7
            imagePullPolicy: IfNotPresent
            command:
            - /bin/sh
            - -c
            - |
              set -eu

              lifecycle_file="/tmp/lifecycle.json"

              cat <<EOF > "${lifecycle_file}"
              {
                "Rules": [
                  {
                    "ID": "clickhouse-daily-expiry",
                    "Status": "Enabled",
                    "Filter": { "Prefix": "clickhouse/daily/" },
                    "Expiration": { "Days": 7 }
                  },
                  {
                    "ID": "clickhouse-weekly-expiry",
                    "Status": "Enabled",
                    "Filter": { "Prefix": "clickhouse/weekly/" },
                    "Expiration": { "Days": 28 }
                  },
                  {
                    "ID": "clickhouse-monthly-expiry",
                    "Status": "Enabled",
                    "Filter": { "Prefix": "clickhouse/monthly/" },
                    "Expiration": { "Days": 93 }
                  },
                  {
                    "ID": "postgres-daily-expiry",
                    "Status": "Enabled",
                    "Filter": { "Prefix": "postgres/daily/" },
                    "Expiration": { "Days": 7 }
                  },
                  {
                    "ID": "postgres-weekly-expiry",
                    "Status": "Enabled",
                    "Filter": { "Prefix": "postgres/weekly/" },
                    "Expiration": { "Days": 28 }
                  },
                  {
                    "ID": "postgres-monthly-expiry",
                    "Status": "Enabled",
                    "Filter": { "Prefix": "postgres/monthly/" },
                    "Expiration": { "Days": 93 }
                  }
                ]
              }
              EOF

              mc alias set backup "${S3_ENDPOINT}" "${S3_ACCESS_KEY}" "${S3_SECRET_KEY}" --api s3v4
              mc mb --ignore-existing "backup/${S3_BUCKET}"
              mc version enable "backup/${S3_BUCKET}"
              mc ilm import "backup/${S3_BUCKET}" "${lifecycle_file}"
              echo "MinIO lifecycle configuration applied for backup bucket ${S3_BUCKET}"
            env:
            - name: S3_ENDPOINT
              value: "http://minio.storage.svc.cluster.local:9000"
            - name: S3_BUCKET
              value: "backups"
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-backup-credentials
                  key: access-key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-backup-credentials
                  key: secret-key
            resources:
              requests:
                cpu: 50m
                memory: 64Mi
              limits:
                cpu: 500m
                memory: 256Mi
          restartPolicy: OnFailure
