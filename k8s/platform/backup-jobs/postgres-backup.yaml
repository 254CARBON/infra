apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: backup
  labels:
    app.kubernetes.io/name: postgres-backup
    app.kubernetes.io/part-of: "254carbon"
spec:
  schedule: "0 3 * * *"  # Daily at 3 AM
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: postgres-backup
            app.kubernetes.io/part-of: "254carbon"
        spec:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            fsGroup: 1000
          containers:
          - name: postgres-backup
            image: postgres:15
            imagePullPolicy: IfNotPresent
            command:
            - /bin/bash
            - -c
            - |
              echo "Starting PostgreSQL backup..."
              pg_dump -h postgresql.data-plane.svc.cluster.local -U postgres -d 254carbon > /backup/postgres-$(date +%Y%m%d-%H%M%S).sql
              echo "Backup completed"
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 500m
                memory: 512Mi
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-storage
          restartPolicy: OnFailure
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-storage
  namespace: backup
  labels:
    app.kubernetes.io/name: backup-storage
    app.kubernetes.io/part-of: "254carbon"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: backup-storage
