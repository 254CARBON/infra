apiVersion: v1
kind: Secret
metadata:
  name: keycloak-credentials
  namespace: platform-core
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/part-of: "254carbon"
type: Opaque
data:
  admin-password: YWRtaW4xMjM= # admin123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: platform-core
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/part-of: "254carbon"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/part-of: "254carbon"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 60
            preference:
              matchExpressions:
              - key: role
                operator: In
                values:
                - core
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 40
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
              topologyKey: kubernetes.io/hostname
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash","-lc"]
        args:
        - |
          set -euo pipefail
          echo "[keycloak] Running one-time build"
          /opt/keycloak/bin/kc.sh build
          echo "[keycloak] Starting server"
          exec /opt/keycloak/bin/kc.sh start --http-enabled=true --hostname=keycloak.platform-core.svc.cluster.local --hostname-strict=false
        ports:
        - name: http
          containerPort: 8080
        - name: management
          containerPort: 9000
        env:
        - name: KEYCLOAK_ADMIN
          value: "admin"
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-credentials
              key: admin-password
        - name: KC_DB
          value: "postgres"
        - name: KC_DB_URL
          value: "jdbc:postgresql://postgresql.data-plane.svc.cluster.local:5432/254carbon"
        - name: KC_DB_USERNAME
          value: "postgres"
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: password
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"
        - name: KC_HOSTNAME
          value: "keycloak.platform-core.svc.cluster.local"
        - name: KC_HEALTH_ENABLED
          value: "true"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
        resources:
          requests:
            cpu: 750m
            memory: 1Gi
          limits:
            cpu: 1500m
            memory: 2Gi
        startupProbe:
          httpGet:
            path: /health/live
            port: 9000
          failureThreshold: 36
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9000
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9000
          initialDelaySeconds: 45
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: platform-core
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/part-of: "254carbon"
spec:
  selector:
    app.kubernetes.io/name: keycloak
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  type: ClusterIP
